class Solution {
    public static boolean isValid(String s) {
       Stack<Character> stack = new Stack<Character>();
        char[] chars = s.toCharArray();
        for (int i = 0; i < s.length();i++) {

            switch (chars[i]) {
                case '(':
                case '{':
                case '[':
                    stack.push(chars[i]); //放入栈
                    break;
                default:
                    if (stack.isEmpty()) {
                        return false;
                    }
                    //取出栈顶元素
                    char left = stack.pop();
                    if (!compareBracket(left, chars[i])) {
                        return false;
                    }
            }
        }
        if (!stack.isEmpty() ) {
            return false;
        } else {
            return true;
        }
    }

    private static boolean compareBracket(char left, char right) {
        if (left == '(' && right == ')') {
            return true;
        }
        if (left == '{' && right == '}') {
            return true;
        }
        if (left == '[' && right == ']') {
            return true;
        }
        return false;
    }
}
