class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int len1 = nums1.length;
        int len2 = nums2.length;
        int maxLen = len1;
        if (len2 > len1) {
            maxLen = len2;
        }
        int[] arr = new int[maxLen];
        int k = 0;
        int count = 0;
        for(int i = 0; i < len1; i++) {
            int j = 0;
            for(j = 0; j < len2;j++) {
                if(nums1[i] == nums2[j]) {
                    arr[k++] = nums2[j];
                    count++;
                    break;
                }
            }
        }
        if(arr.length == 1) {
            return arr;
        }
        Stack<Integer> stack = new Stack<>();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < count;i++) {
            if (!stack.contains(arr[i])) {
                stack.push(arr[i]);
            }
        }
        int[] a = new int[stack.size()];
        for (int i = 0; i < a.length;i++) {
            a[i] = stack.pop();
        }

        return a;
    }
}
